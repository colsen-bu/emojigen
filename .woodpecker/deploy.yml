# Woodpecker CI Deploy Pipeline for Discord Emoji Bot
# This pipeline handles production deployments

# Only run on main branch and tags
when:
  - event: [push, tag]
    branch: main

steps:
  # Pre-deployment checks
  - name: pre-deploy-check
    image: python:3.11-slim
    environment:
      DISCORD_BOT_TOKEN:
        from_secret: DISCORD_BOT_TOKEN
      OPENAI_API_KEY:
        from_secret: OPENAI_API_KEY
    commands:
      - echo "üîç Running pre-deployment checks for Discord Emoji Bot..."
      - |
        if [ -z "$DISCORD_BOT_TOKEN" ]; then
          echo "‚ùå DISCORD_BOT_TOKEN is required for Discord bot deployment"
          exit 1
        fi
      - |
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "‚ùå OPENAI_API_KEY is required for DALL-E emoji generation"
          exit 1
        fi
      - echo "‚úÖ Discord and OpenAI environment variables validated"

  # Build production image
  - name: build-production
    image: docker:24
    commands:
      - echo "üèóÔ∏è Building production Docker image for Discord Emoji Bot..."
      - docker build -t discord-emoji-bot:production-${CI_COMMIT_SHA} .
      - docker tag discord-emoji-bot:production-${CI_COMMIT_SHA} discord-emoji-bot:production-latest
      - echo "‚úÖ Discord Emoji Bot production image built!"

  # Deploy using docker-compose
  - name: deploy-with-compose
    image: docker:24
    detach: true
    environment:
      DISCORD_BOT_TOKEN:
        from_secret: DISCORD_BOT_TOKEN
      OPENAI_API_KEY:
        from_secret: OPENAI_API_KEY
    commands:
      - export DISCORD_BOT_TOKEN="${DISCORD_BOT_TOKEN}"
      - export OPENAI_API_KEY="${OPENAI_API_KEY}"
      - echo "üöÄ Deploying Discord Emoji Bot with docker-compose..."
      - |
        # Install docker-compose
        apk add --no-cache curl
        curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
      - |
        # Update the docker-compose.yml to use the new image
        sed -i "s|build: \.|image: discord-emoji-bot:production-${CI_COMMIT_SHA}|" docker-compose.yml
      - |
        # Deploy the Discord bot application
        docker-compose down || true
        docker-compose up -d
      - echo "‚úÖ Discord Emoji Bot deployment completed!"

  # Health check
  - name: health-check
    image: docker:24
    commands:
      - echo "üè• Running health checks for Discord Emoji Bot..."
      - sleep 30  # Wait for Discord bot container to start
      - |
        # Check if Discord bot container is running
        if docker ps | grep discord-emoji-bot; then
          echo "‚úÖ Discord Emoji Bot container is running"
        else
          echo "‚ùå Discord Emoji Bot container is not running"
          docker logs discord-emoji-bot || docker logs emoji-bot
          exit 1
        fi
      - |
        # Check Discord bot logs for successful connection
        docker logs discord-emoji-bot 2>&1 | grep -E "(Ready|Logged in|Connected)" || \
          echo "‚ö†Ô∏è Discord bot may not be fully connected yet"
      - echo "‚úÖ Discord Emoji Bot health check passed!"

  # Cleanup old images
  - name: cleanup
    image: docker:24
    when:
      - branch: main
    commands:
      - echo "üßπ Cleaning up old Discord Emoji Bot Docker images..."
      - docker image prune -f
      - docker images | grep discord-emoji-bot || echo "No old images to clean"
      - echo "‚úÖ Cleanup completed!"

# Removed services and volumes sections due to trust level restrictions
