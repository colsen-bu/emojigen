# Woodpecker CI Test Pipeline for Discord Emoji Bot
# This is a simpler pipeline for testing and development

# Trigger on all events
when:
  - event: [push, pull_request, tag, manual]

services:
  - name: docker
    image: docker:dind
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: /dind-certs
    volumes:
      - /opt/woodpeckerci/dind-certs:/dind-certs
    ports:
      - 2376

steps:
  # Quick code validation
  - name: quick-test
    image: python:3.11-slim
    environment:
      DISCORD_BOT_TOKEN: "dummy"
      OPENAI_API_KEY: "dummy"
    commands:
      - echo "üîç Running quick validation tests for Discord Emoji Bot..."
      - apt-get update && apt-get install -y gcc
      - pip install --upgrade pip
      - pip install -r requirements.txt
      - python -c "import sys; sys.path.insert(0, 'src'); import discord_emoji; print('‚úÖ Discord Emoji Bot imports successfully')"
      - python -c "import discord; import openai; import aiohttp; from PIL import Image; print('‚úÖ All Discord and DALL-E dependencies available')"
      - echo "‚úÖ Quick Discord Emoji Bot tests passed!"

  # Syntax and basic checks
  - name: syntax-check
    image: python:3.11-slim
    commands:
      - echo "üîç Checking Python syntax for Discord Emoji Bot..."
      - python -m py_compile src/discord_emoji.py
      - echo "‚úÖ Discord Emoji Bot syntax check passed!"

  # Docker build test
  - name: docker-build-test
    image: docker:24
    environment:
      DOCKER_HOST: 'tcp://docker:2376'
      DOCKER_CERT_PATH: '/dind-certs/client'
      DOCKER_TLS_VERIFY: '1'
    volumes:
      - /opt/woodpeckerci/dind-certs:/dind-certs
    commands:
      - echo "üèóÔ∏è Testing Docker build for Discord Emoji Bot..."
      - docker build -t discord-emoji-bot-test:${CI_COMMIT_SHA} .
      - echo "‚úÖ Discord Emoji Bot Docker build test completed!"

  # Test with real secrets (for environment validation)
  - name: test-with-real-secrets
    image: python:3.11-slim
    environment:
      DISCORD_BOT_TOKEN:
        from_secret: DISCORD_BOT_TOKEN
      OPENAI_API_KEY:
        from_secret: OPENAI_API_KEY
    commands:
      - echo "üß™ Testing Discord Emoji Bot with real environment secrets..."
      - apt-get update && apt-get install -y gcc
      - pip install --upgrade pip
      - pip install -r requirements.txt
      - |
        # Test that the bot can import and access real environment variables
        python -c "
        import os, sys
        sys.path.insert(0, 'src')
        # Test imports work
        import discord_emoji
        print('‚úÖ Discord Emoji Bot modules import successfully')
        # Test environment variable reading
        token = os.getenv('DISCORD_BOT_TOKEN')
        api_key = os.getenv('OPENAI_API_KEY')
        print(f'‚úÖ Environment variables accessible: token={len(token) if token else 0} chars, api_key={len(api_key) if api_key else 0} chars')
        if token and len(token) > 10:
          print('‚úÖ DISCORD_BOT_TOKEN appears to be valid')
        else:
          print('‚ö†Ô∏è DISCORD_BOT_TOKEN may be missing or invalid')
        if api_key and len(api_key) > 10:
          print('‚úÖ OPENAI_API_KEY appears to be valid')
        else:
          print('‚ö†Ô∏è OPENAI_API_KEY may be missing or invalid')
        "
      - echo "‚úÖ Discord Emoji Bot real environment test completed!"

# Removed services and volumes sections due to trust level restrictions
